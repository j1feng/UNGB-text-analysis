library(tidyverse)
library(tokenizers)
metadata <- read_csv("SOTU_WithText.csv")
metadata
View(metadata)
library(tidyverse)
library(tokenizers)
metadata <- read_csv("UNGDspeeches.csv")
metadata
library(tidyverse)
library(tokenizers)
library(quanteda)
library(quanteda.textplots)
metadata <- read_csv("UNGDspeeches.csv")
metadata
corpus_sotu <- corpus(metadata, text_field = "text")
toks <- corpus_sotu %>%
tokens()
dfm <- dfm(toks)
dfm
toks <- tokens(corpus_sotu, remove_punct = TRUE, remove_numbers=TRUE)
toks <- tokens_wordstem(toks)
toks <- tokens_select(toks,  stopwords("en"), selection = "remove")
dfm <- dfm(toks)
dfm
#76792 features qwq
dfm_trimmed <- dfm_trim(dfm, min_docfreq = 0.05, docfreq_type = "prop")
dfm_trimmed
#50996 features qwq
textplot_wordcloud(dfm_trimmed, col="black")
metadata
metadata$country
'a' in metadata$country
metadata$country == 'CAN'
metadata$country == 'USA'
#Subset dfm and meatadata to speech made by the US and Canada
dfm_trimmed <- dfm_trimmed[metadata$country%in%c("USA", "CAN"),]
metadata <- metadata[metadata$country%in%c("USA", "CAN"),]
#Subset dfm and meatadata to speech made by the US and Canada
dfm_trimmed <- dfm_trimmed[metadata$country%in%c("USA", "CAN"),]
metadata <- metadata[metadata$country%in%c("USA", "CAN"),]
metadata
#Subset dfm and meatadata to speech made by the US and Canada
dfm_trimmed <- dfm_trimmed[metadata$country%in%c("USA", "CAN"),]
metadata <- metadata[metadata$country%in%c("USA", "CAN"),]
dfm_trimmed
#Subset dfm and meatadata to speech made by the US and Canada
dfm_trimmed <- dfm_trimmed[metadata$country%in%c("USA", "CAN"),]
metadata <- metadata[metadata$country%in%c("USA", "CAN"),]
#A different perspective: Fightin' words
clusterFightinWords <- function(dfm, clust.vect, alpha.0=100) {
# we need to get the overall corpus word distribution and the cluster-specific words dists
# y_{kw} in Monroe et al.
overall.terms <- colSums(dfm)
# n and n_k in Monroe et al.
n <- sum(overall.terms)
# alpha_{kw} in Monroe et al.
prior.terms <- overall.terms / n * alpha.0
# y_{kw}(i) in Monroe et al.
cluster.terms <- colSums(dfm[clust.vect, ])
# n_k(i) in Monroe et al.
cluster.n <- sum(cluster.terms)
cluster.term.odds <-
(cluster.terms + prior.terms) /
(cluster.n + alpha.0 - cluster.terms - prior.terms)
overall.term.odds <-
(overall.terms + prior.terms) /
(n + alpha.0 - overall.terms - prior.terms)
log.odds <- log(cluster.term.odds) - log(overall.term.odds)
variance <- 1/(cluster.terms + prior.terms) + 1/(overall.terms + prior.terms)
# return the variance weighted log-odds for each term
output <- log.odds / sqrt(variance)
names(output) <- colnames(dfm)
return(output)
}
#Find words that are distinctive of US
terms <- clusterFightinWords(dfm_trimmed,
metadata$country=="USA")
sort(terms, decreasing=T)[1:10]
#Find words that are distinctive of US
terms <- clusterFightinWords(dfm_trimmed,
metadata$country=="CAN")
sort(terms, decreasing=T)[1:10]
#Find words that are distinctive of US
terms <- clusterFightinWords(dfm_trimmed,
metadata$country=="USA")
sort(terms, decreasing=T)[1:10]
#Find words that are distinctive of Canada
terms <- clusterFightinWords(dfm_trimmed,
metadata$country=="CAN")
sort(terms, decreasing=T)[1:10]
#Find words that are distinctive of US
terms <- clusterFightinWords(dfm_trimmed,
metadata$country=="USA")
sort(terms, decreasing=T)[1:10]
install.packages("stm")
#library(stm)
install.packages("seedelda")
#(seededlda)
#install.packages("stm")
library(stm)
#install.packages("seedelda")
(seededlda)
#install.packages("stm")
library(stm)
#install.packages("seedelda")
library(seededlda)
#install.packages("stm")
library(stm)
install.packages("seedelda")
library(seededlda)
#install.packages("stm")
library(stm)
install.packages("seedelda")
library(seededlda)
#install.packages("stm")
library(stm)
install.packages("seedelda")
library(seededlda)
#install.packages("stm")
library(stm)
install.packages("seededlda")
library(seededlda)
#install.packages("stm")
library(stm)
#install.packages("seededlda")
library(seededlda)
metadata
#STM
#Process the data to put it in STM format.  Textprocessor automatically does preprocessing
temp<-textProcessor(documents=metadata$text,metadata=metadata)
#STM
#Process the data to put it in STM format.  Textprocessor automatically does preprocessing
temp<-textProcessor(documents=metadata$text,metadata=metadata)
#STM
#Process the data to put it in STM format.  Textprocessor automatically does preprocessing
temp<-textProcessor(documents=metadata$text,metadata=metadata)
#install.packages("stm")
library(stm)
#install.packages("seededlda")
library(seededlda)
#STM
#Process the data to put it in STM format.  Textprocessor automatically does preprocessing
temp<-textProcessor(documents=metadata$text,metadata=metadata)
#STM
#Process the data to put it in STM format.  Textprocessor automatically does preprocessing
temp <- textProcessor(documents=metadata$text,metadata=metadata)
#STM
#Process the data to put it in STM format.  Textprocessor automatically does preprocessing
temp <- textProcessor(documents=metadata$text,metadata=metadata)
install.packages("tm")
#STM
#Process the data to put it in STM format.  Textprocessor automatically does preprocessing
temp <- textProcessor(documents=metadata$text,metadata=metadata)
#prepDocuments removes words/docs that are now empty after preprocessing
out <- prepDocuments(temp$documents, temp$vocab, temp$meta)
#Let's try to distinguish between topics that are spoken/written and by year
#This takes a bit. You'd want to remove max.em.its -- this is just to make it shorter!
#Here we are using prevalence covariate sotu_type and year
model.stm <- stm(out$documents, out$vocab, K = 10, prevalence = ~country + s(year),
data = out$meta, max.em.its = 10)
#Find most probable words in each topic
labelTopics(model.stm)
#And most common topics
plot(model.stm, n=10)
#Get representative documents
findThoughts(model.stm, texts=out$meta$text, topics=8, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$text, topics=1, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$country, topics=1, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$text, topics=1, n=3)
metadata
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=1, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=1, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=1, n=3)
findThoughts(model.stm, texts=out$meta$country, topics=1, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=1, n=3)
findThoughts(model.stm, texts=out$meta$country, topics=1, n=3)
findThoughts(model.stm, texts=out$meta$text, topics=1, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=2, n=3)
findThoughts(model.stm, texts=out$meta$country, topics=2, n=3)
findThoughts(model.stm, texts=out$meta$text, topics=2, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=2, n=5)
findThoughts(model.stm, texts=out$meta$country, topics=2, n=3)
findThoughts(model.stm, texts=out$meta$text, topics=2, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=2, n=3)
findThoughts(model.stm, texts=out$meta$country, topics=2, n=3)
findThoughts(model.stm, texts=out$meta$text, topics=2, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=3, n=3)
findThoughts(model.stm, texts=out$meta$country, topics=3, n=3)
findThoughts(model.stm, texts=out$meta$text, topics=3, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=4, n=3)
findThoughts(model.stm, texts=out$meta$country, topics=4, n=3)
findThoughts(model.stm, texts=out$meta$text, topics=4, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=5, n=3)
findThoughts(model.stm, texts=out$meta$country, topics=5, n=3)
findThoughts(model.stm, texts=out$meta$text, topics=5, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=5, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=5, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=5, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=1, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=1, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=1, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=6, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=6, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=6, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
#findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
#findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
#findThoughts(model.stm, texts=out$meta$year, topics=7, n=10)
#findThoughts(model.stm, texts=out$meta$country, topics=7, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=7, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=8, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=8, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=8, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=9, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=9, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=9, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=9, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=9, n=20)
findThoughts(model.stm, texts=out$meta$text, topics=9, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=9, n=20)
findThoughts(model.stm, texts=out$meta$country, topics=9, n=20)
findThoughts(model.stm, texts=out$meta$text, topics=9, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=10, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=10, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=10, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=10, n=10)
#findThoughts(model.stm, texts=out$meta$text, topics=10, n=3)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=10, n=10)
findThoughts(model.stm, texts=out$meta$country, topics=10, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=3)
#Get representative documents
#findThoughts(model.stm, texts=out$meta$year, topics=10, n=10)
#findThoughts(model.stm, texts=out$meta$country, topics=10, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=3)
#Get representative documents
#findThoughts(model.stm, texts=out$meta$year, topics=10, n=10)
#findThoughts(model.stm, texts=out$meta$country, topics=10, n=10)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=10, n=20)
findThoughts(model.stm, texts=out$meta$country, topics=10, n=20)
#findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
#Get representative documents
#findThoughts(model.stm, texts=out$meta$year, topics=10, n=20)
#findThoughts(model.stm, texts=out$meta$country, topics=10, n=20)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=0)
#Get representative documents
#findThoughts(model.stm, texts=out$meta$year, topics=10, n=20)
#findThoughts(model.stm, texts=out$meta$country, topics=10, n=20)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=10, n=20)
#findThoughts(model.stm, texts=out$meta$country, topics=10, n=20)
#findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=10, n=20)
#findThoughts(model.stm, texts=out$meta$country, topics=10, n=20)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=3, n=20)
findThoughts(model.stm, texts=out$meta$country, topics=3, n=20)
#findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
#Get representative documents
findThoughts(model.stm, texts=out$meta$year, topics=3, n=20)
findThoughts(model.stm, texts=out$meta$country, topics=3, n=20)
findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
#Get representative documents
#findThoughts(model.stm, texts=out$meta$year, topics=3, n=20)
#findThoughts(model.stm, texts=out$meta$country, topics=3, n=20)
#findThoughts(model.stm, texts=out$meta$text, topics=10, n=10)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "country")
#plot(model.stm.ee, "sotu_type", method="difference", cov.value1="speech", cov.value2="written")
#plot(model.stm.ee, "year", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
#plot(model.stm.ee, "country")
#plot(model.stm.ee, "sotu_type", method="difference", cov.value1="speech", cov.value2="written")
plot(model.stm.ee, "year", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
#plot(model.stm.ee, "country")
#plot(model.stm.ee, "sotu_type", method="difference", cov.value1="speech", cov.value2="written")
plot(model.stm.ee, "country", "year", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "country", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "country", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "year", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "country", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "year", method="continuous", topics=8)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "year", method="continuous")
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "year", method="continuous", topics=1)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "year", method="continuous", topics=2)
model.stm.ee <- estimateEffect(1:10 ~ country + s(year), model.stm, meta = out$meta)
plot(model.stm.ee, "year", method="continuous", topics=2)
